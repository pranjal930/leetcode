/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {
    static int prePointer=0;
    public TreeNode buildTree(int[] preorder, int[] inorder) {
        if(preorder.length==0)
            return null;
        TreeNode root=makeTree(preorder,inorder,0,inorder.length-1);
        prePointer=0;
        return root;
    }
    public TreeNode makeTree(int preorder[],int inorder[],int low,int high)
    {
        
        int inPos;
        if(low>high)
            return null;
        TreeNode newnode=new TreeNode(preorder[prePointer++]);
        if(low==high)
            return newnode;
        inPos=search(inorder,low,high,newnode.val);
        newnode.left=makeTree(preorder,inorder,low,inPos-1);
        newnode.right=makeTree(preorder,inorder,inPos+1,high);
        return newnode;
    }
    public int search(int inorder[],int low,int high,int val)
    {
        int i;
        for(i=low;i<=high;i++)
        {
            if(inorder[i]==val)
                return i;
        }
        return i;
    }
}