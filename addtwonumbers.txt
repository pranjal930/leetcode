/*You are given two non-empty linked lists representing two non-negative integers. The digits are stored in reverse order and each of their nodes contain a single digit. Add the two numbers and return it as a linked list.

You may assume the two numbers do not contain any leading zero, except the number 0 itself.*/
/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
class Solution {
    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
        ListNode head=new ListNode(0);
        ListNode l3=head;
        int c=0,x,y;
        while(l1!=null||l2!=null)
        {
            x=(l1!=null)?l1.val:0;
            y=(l2!=null)?l2.val:0;
            l3.next=new ListNode((x+y+c)%10);
             if(c+x+y>9)
                c=1;
            else
                c=0;
                l3=l3.next;
            if(l1!=null)
                l1=l1.next;
            if(l2!=null)
                l2=l2.next;
        }
        if(c==1)
            l3.next=new ListNode(1);
        return head.next;
    }
}