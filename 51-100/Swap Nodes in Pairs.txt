/*Given a linked list, swap every two adjacent nodes and return its head.

You may not modify the values in the list's nodes, only nodes itself may be changed.*/
/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
class Solution {
    public ListNode swapPairs(ListNode head) {
        if(head==null||head.next==null)
            return head;
        ListNode t1=head;
        ListNode ans=head.next;
        ListNode t2=t1.next;
        ListNode prev=t1;
        while(t2!=null)
        {
            t2=t2.next;
            t1.next.next=t1;
            t1=t2;
            if(t2!=null)
            {
                if(t2.next!=null)
                 prev.next=t2.next;
                else
                    prev.next=t2;
            }
            else
                prev.next=t2;
            prev=t1;
            if(t2!=null)
            t2=t2.next;
        }
         return ans;   
    }
}