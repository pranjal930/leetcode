/*Given a m x n grid filled with non-negative numbers, find a path from top left to bottom right which minimizes the sum of all numbers along its path.

Note: You can only move either down or right at any point in time.*/
class Solution {
    public int minPathSum(int[][] grid) {
        for(int i=grid.length-1;i>=0;i--)
        {
            for(int j=grid[0].length-1;j>=0;j--)
            {
                if(i!=grid.length-1&&j!=grid[0].length-1)
                {
                    grid[i][j]+=Math.min(grid[i+1][j],grid[i][j+1]);
                }
                else if(i==grid.length-1&&j!=grid[0].length-1)
                    grid[i][j]+=grid[i][j+1];
                else if(i!=grid.length-1&&j==grid[0].length-1)
                    grid[i][j]+=grid[i+1][j];
            }
        }
        return grid[0][0];
    }
    
}