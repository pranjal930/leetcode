/*Given a collection of intervals, merge all overlapping intervals.*/
class Solution {
    private class IntervalComparator implements Comparator<int[]> {
    @Override
    public int compare(int[] a, int[] b) {
      return a[0] < b[0] ? -1 : a[0] == b[0] ? 0 : 1;
    }
    }
    public int[][] merge(int[][] intervals) {
        List<int[]> ans=new ArrayList<>();
        if(intervals.length==0)
            return new int[0][0];
        Collections.sort(Arrays.asList(intervals), new IntervalComparator());
        int i,j;
        int start,end;
        for(i=0;i<intervals.length;i++)
        {
            j=i+1;
                      start=intervals[i][0];
                      end=intervals[i][1];
            while(i<intervals.length-1&&end>=intervals[j][0])
            {
                
                if(intervals[j][1]>end)
                    end=intervals[j][1];
                i++;
                j++;
                
            }
            if(intervals[j-1][1]>end)
                end=intervals[j-1][1];
            ans.add(new int[]{start,end});
               
        }
         return ans.toArray(new int[ans.size()][]);
    }
}