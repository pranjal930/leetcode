/*Given a string, sort it in decreasing order based on the frequency of characters.*/
class Solution {
    public String frequencySort(String s) {
        if(s.length()==0)
            return "";
        HashMap<Character,Integer> charCount = new HashMap<>();
        HashMap<Integer,ArrayList<Character>> sortMap=new HashMap<Integer,ArrayList<Character>>();
        ArrayList<Character> sol=new ArrayList<Character>();
        for(int i=0;i<s.length();i++)
        {
            if(!charCount.containsKey(s.charAt(i)))
                charCount.put(s.charAt(i),1);
            else
                charCount.put(s.charAt(i),charCount.get(s.charAt(i))+1);
        }
        for(char c=' ';c!='z'+1;c++)
        {
            //System.out.println("henlo");
            sortMap.putIfAbsent(charCount.get(c),new ArrayList<Character>());
            sortMap.get(charCount.get(c)).add(c);
        }
      /*  for(char c='A';c!='Z'+1;c++)
        {
            sortMap.putIfAbsent(charCount.get(c),new ArrayList<Character>());
            sortMap.get(charCount.get(c)).add(c);
        }*/
        for(int i=s.length();i>=0;i--)
        {
            if(sortMap.containsKey(i))
            {
                for(int j=0;j<sortMap.get(i).size();j++)
                {
                    int count=i;
                    while(count>0)
                    {
                        sol.add(sortMap.get(i).get(j));
                        count--;
                    }
                    
                }
            }
                    
        }
        return sol.toString().substring(1, 3 * sol.size() - 1) 
                            .replaceAll(", ", ""); 
    }
}