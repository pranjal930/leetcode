/*Given a matrix of m x n elements (m rows, n columns), return all elements of the matrix in spiral order.*/
class Solution {
    public List<Integer> spiralOrder(int[][] matrix) {
         List<Integer> ans = new ArrayList<>();
        if(matrix.length==0)
            return ans;
        int xcount=matrix.length-1,ycount=matrix[0].length,i=1;
        int counter=0;
        int xinc=-1,yinc=-1,xdec=0,ydec=-1,temp;
        int x=0,y=-1;
       
        
        while(xcount!=0||ycount!=0)
        {
            //temp=count;
            if(xdec==0)
            {
                y++;
                temp=ycount;
                while(temp-->0)
                {
                   ans.add(matrix[x][y++]);
                }
                xinc=-1;
                yinc=0;
                xdec=-1;
                ydec=-1;
                if(xcount!=0)
                ycount--;
                else 
                ycount=0;
                y--;
            }
            else if(yinc==0)
            {
                x++;
                temp=xcount;
                while(temp-->0)
                {
                   ans.add(matrix[x++][y]);
   
                }
                xinc=0;
                yinc=-1;
                xdec=-1;
                ydec=-1;
                if(ycount!=0)
                xcount--;
                else
                xcount=0;
                x--;
            }
            else if(xinc==0)
            {
                y--;
                temp=ycount;
                while(temp-->0)
                {
                    ans.add(matrix[x][y--]);
   
                }
                xinc=-1;
                yinc=-1;
                xdec=-1;
                ydec=0;
                if(xcount!=0)
                ycount--;
                else 
                ycount=0;
                y++;
            }
            else if(ydec==0)
            {
                x--;
                temp=xcount;
                while(temp-->0)
                {
                   ans.add(matrix[x--][y]);
   
                }
                xinc=-1;
                yinc=-1;
                xdec=0;
                ydec=-1;
                if(ycount!=0)
                xcount--;
                else
                xcount=0;
                x++;
            }
          
        }
        return ans;
    }
}