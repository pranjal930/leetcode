/*Write an efficient algorithm that searches for a value in an m x n matrix. This matrix has the following properties:

Integers in each row are sorted in ascending from left to right.
Integers in each column are sorted in ascending from top to bottom.*/
class Solution {
    public boolean searchMatrix(int[][] matrix, int target) {
        if(matrix.length==0||matrix[0].length==0)
            return false;
        int curRow=0,curCol=matrix[0].length-1;
        while(curRow<matrix.length&&curCol>=0)
        {
            if(matrix[curRow][curCol]==target)
                return true;
            else if(matrix[curRow][curCol]>target)
                curCol--;
            else
                curRow++;
        }
        return false;
    }
}