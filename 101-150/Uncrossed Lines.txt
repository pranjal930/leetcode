/*We write the integers of A and B (in the order they are given) on two separate horizontal lines.

Now, we may draw connecting lines: a straight line connecting two numbers A[i] and B[j] such that:

A[i] == B[j];
The line we draw does not intersect any other connecting (non-horizontal) line.
Note that a connecting lines cannot intersect even at the endpoints: each number can only belong to one connecting line.

Return the maximum number of connecting lines we can draw in this way.

 */
class Solution {
    public int maxUncrossedLines(int[] A, int[] B) {
        if(A.length==0||B.length==0)
            return 0;
        int [][] dp=new int[A.length][B.length];
        for(int i=0;i<A.length;i++)
        {
            for(int j=0;j<B.length;j++)
            {
                if(A[i]==B[j])
                {
                   if(i!=0&&j!=0)
                       dp[i][j]=dp[i-1][j-1]+1;
                    else
                        dp[i][j]=1;
                } 
                else
                {
                    if(i==0&&j==0)
                        dp[i][j]=0;
                    else if(i==0)
                        dp[i][j]=dp[i][j-1];
                    else if(j==0)
                        dp[i][j]=dp[i-1][j];
                    else
                        dp[i][j]=Math.max(dp[i-1][j],dp[i][j-1]);
                }
            }
        }
        return dp[A.length-1][B.length-1];
    }
}