/*Given a list of non-negative numbers and a target integer k, write a function to check if the array has a continuous subarray of size at least 2 that sums up to a multiple of k, that is, sums up to n*k where n is also an integer.*/
class Solution {
    public boolean checkSubarraySum(int[] nums, int k) {
        HashMap<Integer,Integer> arr_sum=new HashMap();
        int sum=0;
        arr_sum.put(0,-1);
        for(int i=0;i<nums.length;i++)
        {
             sum+=nums[i];
            if(k!=0)
                sum=sum%k;
            if(arr_sum.containsKey(sum))
            {
                  if(i-arr_sum.get(sum)>=2)
                      return true;
            }
            else
            arr_sum.put(sum,i);
        }
        return false;
    }
}