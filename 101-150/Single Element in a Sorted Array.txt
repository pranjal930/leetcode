/*You are given a sorted array consisting of only integers where every element appears exactly twice, except for one element which appears exactly once. Find this single element that appears only once.*/
class Solution {
    public int singleNonDuplicate(int[] nums) {
        if(nums.length==0)
            return -1;
        int low=0;
        int high=nums.length-1;
        while(high>=low)
        {
            int mid=low+(high-low)/2;
            if(mid==0||mid==nums.length-1)
                return nums[mid];
            if(nums[mid-1]!=nums[mid]&&nums[mid+1]!=nums[mid])
                return nums[mid];    
            else if(nums[mid+1]!=nums[mid])
            {
                if(mid%2==0)
                    high=mid-1;
                else
                    low=mid+1;
            }
            else
            {
                if(mid%2==0)
                    low=mid+1;
                else
                    high=mid-1;

            }
                
        }
        return -1;
        
    }
}