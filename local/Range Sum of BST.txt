/*Given the root node of a binary search tree, return the sum of values of all nodes with value between L and R (inclusive).

The binary search tree is guaranteed to have unique values.*/
/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {
    public int sum=0;
    public int rangeSumBST(TreeNode root, int L, int R) {
        if(root==null)
            return 0;
        traverse(root,L,R);
        return sum;
    }
    public void traverse(TreeNode root,int l,int r)
    {
        if(root==null)
            return ;
        if(root.val>=l&&root.val<=r)
        {
            sum+=root.val;
        }
        if(root.val>l)
            traverse(root.left,l,r);
        if(root.val<r)
            traverse(root.right,l,r);
    }
}