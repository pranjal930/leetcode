/*Given n non-negative integers a1, a2, ..., an , where each represents a point at coordinate (i, ai). n vertical lines are drawn such that the two endpoints of line i is at (i, ai) and (i, 0). Find two lines, which together with x-axis forms a container, such that the container contains the most water.

Note: You may not slant the container and n is at least 2.

 



The above vertical lines are represented by array [1,8,6,2,5,4,8,3,7]. In this case, the max area of water (blue section) the container can contain is 49.*/
class Solution {
    public int maxArea(int[] height) {
        int max=0,i,j,l=height.length;
        
        for(i=0;i<l;i++)
        {
            for(j=l-1;j>=0;j--)
            {
                if((Math.min(height[i],height[j])*Math.abs(j-i))>max)
                    max=Math.min(height[i],height[j])*Math.abs(j-i);
            }
        }
        
        return max;
    }
}