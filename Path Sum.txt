/*Given a binary tree and a sum, determine if the tree has a root-to-leaf path such that adding up all the values along the path equals the given sum.

Note: A leaf is a node with no children.*/
/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {
    public boolean hasPathSum(TreeNode root, int sum) {
        int ans;
        if (root==null)
            return false;
        else if(root.val==sum&&(root.left==null&&root.right==null))
        {
            return true;
        }
        else if(root.left!=null||root.right!=null)
        {
            ans=pathSum(root,sum);
            if(ans==-1)
                return true;
            else
                return false;
        }
        else
            return false;
            
    }
    public int pathSum(TreeNode root,int val)
    {
        int sum=root.val;
        int i=0,j=0;
        if(root.left!=null)
        {
            root.left.val+=sum;
            if(root.left.val==val)
            {
                if(root.left.left==null&&root.left.right==null)
                    return -1;
            }
            i=pathSum(root.left,val);
        }
        if(root.right!=null)
        {
            root.right.val+=sum;
            if(root.right.val==val)
            {
                if(root.right.left==null&&root.right.right==null)
                    return -1;
            }
            j=pathSum(root.right,val);
        }
        if(i==-1||j==-1)
            return -1;
        else
            return 0;
        
    }
}